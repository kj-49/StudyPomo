@using StudyPomo.Library.Models.Utility
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@model StudyPomo.UI.Pages.Timer.IndexModel

<form id="study-task-edit-form" 
    hx-post
    hx-page="Index"
    hx-page-handler="UpdateStudyTask"
    hx-swap="outerHTML"
    hx-target="#dynamic"
    hx-on::after-request=" if(event.detail.successful) this.reset()"
    x-data="{
        selectedLabels: @Json.Serialize(Model.StudyTaskUpdate.TaskLabelIds),
        toggleLabel(id) {
            if (this.selectedLabels.includes(id)) {
                this.selectedLabels=this.selectedLabels.filter(labelId => labelId !== id);
            } else {
                this.selectedLabels.push(id);
            }
        },
        clearSelectedLabels() {
            this.selectedLabels = [];
        }
    }">
    <div class="modal-body">
        <input hidden asp-for="StudyTaskUpdate.Id" />
        <div class="mb-2">
            <label asp-for="StudyTaskUpdate.Name" class="form-label">Task:</label>
            <input class="form-control form-control-sm" asp-for="StudyTaskUpdate.Name" />
            <span asp-validation-for="StudyTaskUpdate.Name" class="text-danger form-text"></span>
        </div>
        <div class="mb-2">
            <label asp-for="StudyTaskUpdate.Description" class="form-label">Description:</label>
            <textarea class="form-control form-control-sm" asp-for="StudyTaskUpdate.Description"></textarea>
            <span asp-validation-for="StudyTaskUpdate.Description" class="text-danger form-text"></span>
        </div>
        <div class="mb-2">
            <label asp-for="StudyTaskUpdate.TaskPriorityId" class="form-label">Priority:</label>
            <select class="form-control form-control-sm" asp-for="StudyTaskUpdate.TaskPriorityId" asp-items="@Model.TaskPriorities">
                <option value="">None</option>
            </select>
            <span asp-validation-for="StudyTaskUpdate.TaskPriorityId" class="text-danger form-text"></span>
        </div>
        <div class="mb-2">
            <label asp-for="StudyTaskUpdate.Deadline" class="form-label">Deadline:</label>
            <input class="form-control form-control-sm" asp-for="StudyTaskUpdate.Deadline" />
            <span asp-validation-for="StudyTaskUpdate.Deadline" class="text-danger form-text"></span>
        </div>
        <div class="mb-2"
             x-data="{ selectedCourseId: @(Model.StudyTaskUpdate.CourseId?.ToString() ?? "null") }">
            <div class="d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center">
                    <label class="form-label me-2 my-0">Course:</label>
                    <template x-if="selectedCourseId != null">
                        @foreach (var course in Model.Courses)
                        {
                            <template x-if="selectedCourseId == @course.Id">
                                <div style="cursor: pointer;" x-on:click.prevent.stop="selectedCourseId = null">
                                    <badge text="@course.Name" color="@course.HexColor"></badge>
                                </div>
                            </template>
                        }
                    </template>
                    <template x-if="selectedCourseId == null">
                        <div class="dropdown">
                            <a class="text-muted" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Choose <i class="bi bi-chevron-expand"></i>
                            </a>
                            <ul class="dropdown-menu">
                                <li class="dropdown-item">
                                    @*Create new label*@
                                    <a asp-page="/Manage/Courses/Index" class="text-opacity-75">
                                        Create New <i class="bi bi-plus"></i>
                                    </a>
                                </li>
                                @foreach (var course in Model.Courses)
                                {
                                    <li>
                                        <a class="dropdown-item" href="#"
                                           x-on:click.prevent.stop="selectedCourseId = @course.Id">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <badge text="@course.Name" color="@course.HexColor"></badge>
                                                <i class="bi"
                                                   :class="selectedCourseId == @course.Id ? 'bi-check' :''">
                                                </i>
                                            </div>
                                        </a>
                                    </li>
                                }
                            </ul>
                        </div>
                    </template>
                </div>
            </div>
            <input type="hidden" name="StudyTaskUpdate.CourseId" :value="selectedCourseId">
        </div>
        <div class="mb-2">
            <div class="d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center">
                    <label asp-for="StudyTaskUpdate.Name" class="form-label me-2 my-0">Labels:</label>
                    <div class="dropdown">
                        <a class="text-muted" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Choose <i class="bi bi-chevron-expand"></i>
                        </a>
                        <ul class="dropdown-menu">
                            <li class="dropdown-item">
                                @*Create new label*@
                                <a asp-page="/Manage/Labels/Index" class="text-opacity-75">
                                    Create New <i class="bi bi-plus"></i>
                                </a>
                            </li>
                            @foreach (var label in Model.TaskLabels)
                            {
                                <li>
                                    <a class="dropdown-item" href="#"
                                        x-on:click.prevent.stop="toggleLabel(@label.Id)">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <badge text="@label.Name" color="@label.HexColor"></badge>
                                            <i class="bi"
                                                :class="selectedLabels.includes(@label.Id) ? 'bi-check' :''">
                                            </i>
                                        </div>
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>

            <div class="mt-2">
                <template x-for="labelId in selectedLabels" :key="labelId">
                    <div>
                        @foreach (var label in Model.TaskLabels)
                        {
                            <template x-if="labelId === @label.Id">
                                <badge text="@label.Name" color="@label.HexColor"></badge>
                            </template>
                        }
                        @*For model binding.*@
                        <input type="hidden" name="StudyTaskUpdate.TaskLabelIds" :value="labelId">
                    </div>
                </template>
            </div>
        </div>
    </div>
    <div class="modal-footer d-flex justify-content-between">
        <div>
        </div>
        <div>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            <button type="submit" id="submitButton" class="btn btn-primary" data-bs-dismiss="modal">Save</button>
        </div>
    </div>
    @Html.AntiForgeryToken()
</form>

@section Scripts {

    <partial name="_ValidationScriptsPartial" />
}