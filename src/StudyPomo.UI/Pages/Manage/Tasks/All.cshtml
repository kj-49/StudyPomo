@page
@using AutoMapper
@using Humanizer
@using StudyPomo.Library.Models.Tables.StudyTaskEntities
@using StudyPomo.UI.Pages.Shared.Snippets.StudyTaskSnippets
@using StudyPomo.UI.ViewModels
@model StudyPomo.UI.Pages.Manage.Tasks.AllModel

@{
}

<div class="modal fade" id="study-task-create-modal" tabindex="-1" aria-labelledby="taskModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header mb-3">
                <h5 class="modal-title" id="taskModalLabel">Create a Task</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="mb-1 px-3">
                <small>Add important tasks you want to complete during this session.</small>
            </div>
            <hr class="text-secondary mb-0" />
            <div>
                <div>
                    <form method="post"
                          asp-page-handler="CreateStudyTask"
                          x-data="{
                          selectedLabels: [],
                          toggleLabel(id) {
                          if (this.selectedLabels.includes(id)) {
                          this.selectedLabels=this.selectedLabels.filter(labelId =>
                        labelId !== id);
                        } else {
                        this.selectedLabels.push(id);
                        }
                        },
                        clearSelectedLabels() {
                        this.selectedLabels = [];
                        },
                        hideMoreOptions: true
                        }"
                        x-on:submit="hideMoreOptions = true"
                        x-on:clear-labels.window="clearSelectedLabels()">
                        <div class="modal-body">
                            <div class="mb-2">
                                <label asp-for="StudyTaskCreate.Name" class="form-label">Task:</label>
                                <input class="form-control form-control-sm" asp-for="StudyTaskCreate.Name" />
                                <span asp-validation-for="StudyTaskCreate.Name" class="text-danger form-text"></span>
                            </div>
                            <a x-show="hideMoreOptions" x-on:click="hideMoreOptions = false" class="text-muted" data-bs-toggle="collapse" href="#extra-options" role="button" aria-expanded="false" aria-controls="extra-options">
                                <i class="bi bi-plus"></i> More options
                            </a>
                            <div class="collapse" :class="hideMoreOptions ? 'hide' : 'show'" id="extra-options">
                                <div class="mb-2">
                                    <label asp-for="StudyTaskCreate.Description" class="form-label">Description:</label>
                                    <textarea class="form-control form-control-sm" asp-for="StudyTaskCreate.Description"></textarea>
                                    <span asp-validation-for="StudyTaskCreate.Description" class="text-danger form-text"></span>
                                </div>
                                <div class="mb-2">
                                    <label asp-for="StudyTaskCreate.TaskPriorityId" class="form-label">Priority:</label>
                                    <select class="form-control form-control-sm" asp-for="StudyTaskCreate.TaskPriorityId" asp-items="@Model.TaskPriorities">
                                        <option value="">None</option>
                                    </select>
                                    <span asp-validation-for="StudyTaskCreate.TaskPriorityId" class="text-danger form-text"></span>
                                </div>
                                <div class="mb-2">
                                    <label asp-for="StudyTaskCreate.Deadline" class="form-label">Deadline:</label>
                                    <input class="form-control form-control-sm" asp-for="StudyTaskCreate.Deadline" />
                                    <span asp-validation-for="StudyTaskCreate.Deadline" class="text-danger form-text"></span>
                                </div>
                                <div class="mb-2"
                                     x-data="{ selectedCourseId: null }">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="d-flex align-items-center">
                                            <label class="form-label me-2 my-0">Course:</label>
                                            @foreach (var course in Model.Courses)
                                            {
                                                <div style="cursor: pointer;" x-show="selectedCourseId == @(course.Id)" x-on:click.prevent.stop="selectedCourseId = null">
                                                    <badge text="@course.Name" color="@course.HexColor"></badge>
                                                </div>
                                            }
                                            <div x-show="selectedCourseId == null" class="dropdown">
                                                <a class="text-muted" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                                    Choose <i class="bi bi-chevron-expand"></i>
                                                </a>
                                                <ul class="dropdown-menu">
                                                    <li class="dropdown-item">
                                                        @*Create new label*@
                                                        <a asp-page="/Manage/Courses/All" class="text-opacity-75">
                                                            Create New <i class="bi bi-plus"></i>
                                                        </a>
                                                    </li>
                                                    @foreach (var course in Model.Courses)
                                                    {
                                                        <li>
                                                            <a class="dropdown-item" href="#"
                                                               x-on:click.prevent.stop="selectedCourseId = @course.Id">
                                                                <div class="d-flex justify-content-between align-items-center">
                                                                    <badge text="@course.Name" color="@course.HexColor"></badge>
                                                                    <i class="bi"
                                                                       :class="selectedCourseId == @course.Id ? 'bi-check' :''">
                                                                    </i>
                                                                </div>
                                                            </a>
                                                        </li>
                                                    }
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                    <input type="hidden" name="StudyTaskCreate.CourseId" :value="selectedCourseId">
                                </div>
                                <div class="mb-2">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="d-flex align-items-center">
                                            <label asp-for="StudyTaskCreate.Name" class="form-label me-2 my-0">Labels:</label>
                                            <div class="dropdown">
                                                <a class="text-muted" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                                    Choose <i class="bi bi-chevron-expand"></i>
                                                </a>
                                                <ul class="dropdown-menu">
                                                    <li class="dropdown-item">
                                                        @*Create new label*@
                                                        <a asp-page="/Manage/Labels/Index" class="text-opacity-75">
                                                            Create New <i class="bi bi-plus"></i>
                                                        </a>
                                                    </li>
                                                    @foreach (var label in Model.TaskLabels)
                                                    {
                                                        <li>
                                                            <a class="dropdown-item" href="#"
                                                               x-on:click.prevent.stop="toggleLabel(@label.Id)">
                                                                <div class="d-flex justify-content-between align-items-center">
                                                                    <badge text="@label.Name" color="@label.HexColor"></badge>
                                                                    <i class="bi"
                                                                       :class="selectedLabels.includes(@label.Id) ? 'bi-check' :''">
                                                                    </i>
                                                                </div>
                                                            </a>
                                                        </li>
                                                    }
                                                </ul>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="mt-2">
                                        <template x-for="labelId in selectedLabels" :key="labelId">
                                            <div>
                                                @foreach (var label in Model.TaskLabels)
                                                {
                                                    <template x-if="labelId === @label.Id">
                                                        <badge text="@label.Name" color="@label.HexColor"></badge>
                                                    </template>
                                                }
                                                @*For model binding.*@
                                                <input type="hidden" name="StudyTaskCreate.TaskLabelIds" :value="labelId">
                                            </div>
                                        </template>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" id="submitButton" class="btn btn-primary">Add</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="sort-modal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="get" asp-page="./">
                <div class="modal-header mb-1">
                    <h5 class="modal-title" id="taskModalLabel">Filter</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">

                    <div x-data="{ Filter: { OrderByCompleted: @(Json.Serialize(Model.Filter.OrderByCompleted)) } }" class="mb-2 d-flex">
                        <label asp-for="Filter.DueDateDescending" class="me-2">Status:</label>
                        <div class="d-flex gap-2" role="group" aria-label="On Off Toggle">
                            <a href="#"
                               :class="{'link-hover-color font-weight-bold': Filter.OrderByCompleted, 'text-muted': !Filter.OrderByCompleted}"
                               x-on:click.prevent="Filter.OrderByCompleted = true"
                               id="toggle-on">
                                Completed First
                            </a>
                            |
                            <a href="#"
                               :class="{'link-hover-color font-weight-bold': !Filter.OrderByCompleted && Filter.OrderByCompleted != null, 'text-muted': Filter.OrderByCompleted || Filter.OrderByCompleted == null}"
                               x-on:click.prevent="Filter.OrderByCompleted = false"
                               id="toggle-on">
                                Incomplete First
                            </a>
                            |
                            <a href="#"
                               :class="{'link-hover-color font-weight-bold': Filter.OrderByCompleted == null, 'text-muted': Filter.OrderByCompleted != null}"
                               x-on:click.prevent="Filter.OrderByCompleted = null"
                               id="toggle-off">
                                None
                            </a>
                        </div>
                        <input hidden asp-for="Filter.OrderByCompleted" :value="Filter.OrderByCompleted" />
                    </div>

                    <div x-data="{ Filter: { DueDateDesc: @(Json.Serialize(Model.Filter.DueDateDescending)) } }" class="mb-2 d-flex">
                        <label asp-for="Filter.DueDateDescending" class="me-2">Due Date:</label>
                        <div class="d-flex gap-2" role="group" aria-label="On Off Toggle">
                            <a href="#"
                               :class="{'link-hover-color font-weight-bold': Filter.DueDateDesc, 'text-muted': !Filter.DueDateDesc}"
                               x-on:click.prevent="Filter.DueDateDesc = true"
                               id="toggle-on">
                                Descending
                            </a>
                            |
                            <a href="#"
                               :class="{'link-hover-color font-weight-bold': !Filter.DueDateDesc, 'text-muted': Filter.DueDateDesc}"
                               x-on:click.prevent="Filter.DueDateDesc = false"
                               id="toggle-off">
                                Ascending
                            </a>
                        </div>
                        <input hidden asp-for="Filter.DueDateDescending" :value="Filter.DueDateDesc" />
                    </div>
                    



                    <div class="mb-2" x-data="{
                        selectedLabels: @(Json.Serialize(Model.Filter.TaskLabelIds)),
                        toggleLabel(id) {
                            if (this.selectedLabels.includes(id)) {
                                this.selectedLabels=this.selectedLabels.filter(labelId => labelId !== id);
                            } else {
                                this.selectedLabels.push(id);
                            }
                        },
                        clearSelectedLabels() {
                            this.selectedLabels = [];
                        }
                    }">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="d-flex align-items-center">
                                <label asp-for="Filter.TaskLabelIds" class="form-label me-2 my-0">Labels:</label>
                                <div class="dropdown">
                                    <a class="text-muted" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                        Choose <i class="bi bi-chevron-expand"></i>
                                    </a>
                                    <ul class="dropdown-menu">
                                        @foreach (var label in Model.TaskLabels)
                                        {
                                            <li>
                                                <a class="dropdown-item" href="#"
                                                   x-on:click.prevent.stop="toggleLabel(@label.Id)">
                                                    <div class="d-flex justify-content-between align-items-center">
                                                        <badge text="@label.Name" color="@label.HexColor"></badge>
                                                        <i class="bi"
                                                           :class="selectedLabels.includes(@label.Id) ? 'bi-check' :''">
                                                        </i>
                                                    </div>
                                                </a>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>

                        <div class="mt-2">
                            <template x-for="labelId in selectedLabels" :key="labelId">
                                <div>
                                    @foreach (var label in Model.TaskLabels)
                                    {
                                        <template x-if="labelId === @label.Id">
                                            <badge text="@label.Name" color="@label.HexColor"></badge>
                                        </template>
                                    }
                                    @*For model binding.*@
                                    <input type="hidden" name="Filter.TaskLabelIds" :value="labelId">
                                </div>
                            </template>
                        </div>
                    </div>
                    <div class="mb-2" x-data="{
                         selectedLabels: @(Json.Serialize(Model.Filter.CourseIds)),
                         toggleLabel(id) {
                         if (this.selectedLabels.includes(id)) {
                         this.selectedLabels=this.selectedLabels.filter(labelId =>
                        labelId !== id);
                        } else {
                        this.selectedLabels.push(id);
                        }
                        },
                        clearSelectedLabels() {
                        this.selectedLabels = [];
                        }
                        }">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="d-flex align-items-center">
                                <label asp-for="Filter.CourseIds" class="form-label me-2 my-0">Courses:</label>
                                <div class="dropdown">
                                    <a class="text-muted" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                        Choose <i class="bi bi-chevron-expand"></i>
                                    </a>
                                    <ul class="dropdown-menu">
                                        @foreach (var label in Model.Courses)
                                        {
                                            <li>
                                                <a class="dropdown-item" href="#"
                                                   x-on:click.prevent.stop="toggleLabel(@label.Id)">
                                                    <div class="d-flex justify-content-between align-items-center">
                                                        <badge text="@label.Name" color="@label.HexColor"></badge>
                                                        <i class="bi"
                                                           :class="selectedLabels.includes(@label.Id) ? 'bi-check' :''">
                                                        </i>
                                                    </div>
                                                </a>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>

                        <div class="mt-2">
                            <template x-for="labelId in selectedLabels" :key="labelId">
                                <div>
                                    @foreach (var label in Model.Courses)
                                    {
                                        <template x-if="labelId === @label.Id">
                                            <badge text="@label.Name" color="@label.HexColor"></badge>
                                        </template>
                                    }
                                    @*For model binding.*@
                                    <input type="hidden" name="Filter.CourseIds" :value="labelId">
                                </div>
                            </template>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" id="submitButton" class="btn btn-primary">Apply</button>
                </div>
            </form>
        </div>
    </div>
</div>


<div class="mb-2">
    <div class="d-flex justify-content-between align-items-end mb-3">
        <h5 class="mb-0">Tasks</h5>
        <div class="d-flex align-items-center">
            @if (Model.StudyTasksPaginated.Count > 0 || Model.FilterActive)
            {
                <div class="d-flex align-items-center">
                    @if (Model.FilterActive)
                    {
                        <a asp-page="/Manage/Tasks/All" asp-route-filter="@null">Reset Filter</a>
                        <div class="mt-1 h-100 mx-3">
                            <div class="vr h-100"></div>
                        </div>

                    }
                    <a href="#" data-bs-toggle="modal" data-bs-target="#sort-modal">Filter <i class="bi bi-filter"></i></a>
                </div>
                <div class="mt-1 h-100 mx-3">
                    <div class="vr h-100"></div>
                </div>
                <a href="#" data-bs-toggle="modal" data-bs-target="#study-task-create-modal"><i class="bi bi-plus-lg me-2"></i>Add New Task</a>
            }
        </div>
        
    </div>
    @await Html.PartialAsync("Partials/_List")
</div>



@section Scripts {

    <partial name="_ValidationScriptsPartial" />
}