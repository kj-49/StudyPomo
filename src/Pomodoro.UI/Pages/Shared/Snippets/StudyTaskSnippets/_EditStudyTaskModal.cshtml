@using Pomodoro.Library.Services
@model Pomodoro.UI.ViewModels.EditStudyTaskVM

<div class="modal fade" id="@StudyTaskModalHelper.GetEditModalId(Model.StudyTask.Id)" tabindex="-1" aria-labelledby="taskEditModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header mb-3">
                <h5 class="modal-title" id="taskEditModalLabel">Edit Task</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="mb-1 px-3">
                <small>Add important tasks you want to complete during this session.</small>
            </div>
            <hr class="text-secondary mb-0" />
            <div>
                <div>
                    <form method="post"
                          x-data="{
                          selectedLabels: @Json.Serialize(Model.StudyTask.TaskLabels.Select(u => u.Id)),
                          toggleLabel(id) {
                          if (this.selectedLabels.includes(id)) {
                          this.selectedLabels=this.selectedLabels.filter(labelId =>
                        labelId !== id);
                        } else {
                        this.selectedLabels.push(id);
                        }
                        },
                        clearSelectedLabels() {
                        this.selectedLabels = [];
                        },
                        hideMoreOptions: true
                        }"
                        >
                        <div class="modal-body">
                            <input hidden asp-for="StudyTaskUpdate.Id" value="@Model.StudyTask.Id" />
                            <input hidden asp-for="StudyTaskUpdate.CourseId" value="@Model.StudyTask.Course?.Id" />
                            <div class="mb-2">
                                <label asp-for="StudyTaskUpdate.Name" class="form-label">Task:</label>
                                <input class="form-control form-control-sm" asp-for="StudyTaskUpdate.Name" value="@Model.StudyTask.Name" />
                                <span asp-validation-for="StudyTaskUpdate.Name" class="text-danger form-text"></span>
                            </div>
                            <a x-show="hideMoreOptions" x-on:click="hideMoreOptions = false" class="text-muted" data-bs-toggle="collapse" href="#extra-options-edit-@(Model.StudyTask.Id)" role="button" aria-expanded="false" aria-controls="extra-options-edit">
                                <i class="bi bi-plus"></i> More options
                            </a>
                            <div class="collapse" :class="hideMoreOptions ? 'hide' : 'show'" id="extra-options-edit-@(Model.StudyTask.Id)">
                                <div class="mb-2">
                                    <label asp-for="StudyTaskUpdate.TaskPriorityId" class="form-label">Priority:</label>
                                    <div class="form-check">
                                        <input checked class="form-check-input" type="radio" asp-for="StudyTaskUpdate.TaskPriorityId" value="" id="none-edit-@(Model.StudyTask.Id)" />
                                        <label class="form-check-label text-opacity-75" for="none-edit-@(Model.StudyTask.Id)">None</label>
                                    </div>
                                    @foreach (var priority in Model.TaskPriorities)
                                    {
                                        <div class="form-check">
                                            <input class="form-check-input" type="radio" asp-for="StudyTaskUpdate.TaskPriorityId" value="@priority.Id" id="@(priority.Id)-edit-@(Model.StudyTask.Id)" />
                                            <label class="form-check-label" for="@(priority.Id)-edit-@(Model.StudyTask.Id)">@priority.Level</label>
                                        </div>
                                    }
                                    <span asp-validation-for="StudyTaskUpdate.TaskPriorityId" class="text-danger form-text"></span>
                                </div>
                                <div class="mb-2">
                                    <label asp-for="StudyTaskUpdate.Deadline" class="form-label">Deadline:</label>

                                    @if (Model.StudyTask.Deadline.HasValue)
                                    {
                                        string deadline = TimeService.ConvertToUserTime(Model.StudyTask.Deadline.Value, Model.TimeZone).ToString("yyyy-MM-ddTHH:mm");
                                        <input class="form-control form-control-sm" asp-for="StudyTaskUpdate.Deadline" value="@deadline" />
                                    } else
                                    {
                                        <input class="form-control form-control-sm" asp-for="StudyTaskUpdate.Deadline" />
                                    }
                                    <span asp-validation-for="StudyTaskUpdate.Deadline" class="text-danger form-text"></span>
                                </div>
                                <div class="mb-2">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="d-flex align-items-center">
                                            <label asp-for="StudyTaskUpdate.Name" class="form-label me-2 my-0">Labels:</label>
                                            <div class="dropdown">
                                                <a class="text-muted" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                                    Choose <i class="bi bi-chevron-expand"></i>
                                                </a>
                                                <ul class="dropdown-menu">
                                                    <li class="dropdown-item">
                                                        @*Create new label*@
                                                        <a asp-page="../Labels/Index" class="text-opacity-75">
                                                            Create New <i class="bi bi-plus"></i>
                                                        </a>
                                                    </li>
                                                    @foreach (var label in Model.TaskLabels)
                                                    {
                                                        <li>
                                                            <a class="dropdown-item" href="#"
                                                               x-on:click.prevent.stop="toggleLabel(@label.Id)">
                                                                <div class="d-flex justify-content-between align-items-center">
                                                                    <badge text="@label.Name" color="@label.HexColor"></badge>
                                                                    <i class="bi"
                                                                       :class="selectedLabels.includes(@label.Id) ? 'bi-check' :''">
                                                                    </i>
                                                                </div>
                                                            </a>
                                                        </li>
                                                    }
                                                </ul>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="mt-2">
                                        <template x-for="labelId in selectedLabels" :key="labelId">
                                            <div>
                                                @foreach (var label in Model.TaskLabels)
                                                {
                                                    <template x-if="labelId === @label.Id">
                                                        <badge text="@label.Name" color="@label.HexColor"></badge>
                                                    </template>
                                                }
                                                @*For model binding.*@
                                                <input type="hidden" name="StudyTaskUpdate.TaskLabelIds" :value="labelId">
                                            </div>
                                        </template>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer d-flex justify-content-between">
                            <div>
                                
                            </div>
                            <div>
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button asp-page-handler="UpdateStudyTask" type="submit" class="btn btn-primary">Save</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>