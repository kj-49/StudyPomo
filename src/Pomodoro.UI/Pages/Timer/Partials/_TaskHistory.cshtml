@using Humanizer
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@model Pomodoro.UI.Pages.Timer.IndexModel

<div class="modal fade" id="study-task-history" tabindex="-1" aria-labelledby="taskModalHistoryLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header mb-3">
                <h5 class="modal-title" id="taskModalHistoryLabel">History</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="mb-1 px-3">
                <small>Archived tasks.</small>
            </div>
            <hr class="text-secondary mb-0" />
            @if (Model.StudyTasks.Where(u => u.Archived).Count() == 0)
            {
                <div class="modal-body">
                    <p>No tasks have been archived.</p>
                </div>
            }
            else
            {
            <div class="modal-body">
                <ul class="list-group">
                    @foreach (var task in Model.StudyTasks.Where(u => u.Archived))
                    {
                        <li class="list-group-item bg-body">
                            <div class="d-flex justify-content-between align-items-center mb-0">
                                <div class="d-flex align-items-baseline">
                                    <div class="d-flex flex-column justify-content-between">
                                        <div class="d-flex align-items-center">
                                            <h6 class="card-title mb-1 me-2">@task.Name</h6>
                                            @if (task.TaskPriority != null)
                                            {
                                                <badge priority="true" text="@task.TaskPriority.Level" color="@task.TaskPriority.DisplayHexColor"></badge>
                                            }
                                            @foreach (var label in task.TaskLabels)
                                            {
                                                <badge text="@label.Name" color="@label.HexColor"></badge>
                                            }
                                        </div>
                                        <small>Completed @task.DateCompleted.Humanize()</small>
                                    </div>
                                </div>
                            </div>

                        </li>
                    }
                </ul>
            </div>
            }
        </div>
    </div>
</div>