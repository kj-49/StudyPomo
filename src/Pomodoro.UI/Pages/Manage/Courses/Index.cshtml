@page "{id:int}"
@using Pomodoro.Library.Models.Tables.StudyTaskEntities
@using Pomodoro.UI.ViewModels
@using System.Text.Json
@using System.Text.Json.Serialization
@model Pomodoro.UI.Pages.Manage.Courses.IndexModel
@{
    ViewData["Title"] = Model.Course.Name;
}

<div class="modal fade" id="course-edit-modal" tabindex="-1" aria-labelledby="courseModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header mb-3">
                <h5 class="modal-title" id="courseModalLabel">Edit Course</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" asp-page-handler="UpdateCourse">
                <input type="hidden" asp-for="CourseUpdate.Id" value="@Model.Course.Id" />
                <div class="modal-body" x-data="{ name: '@(Model.Course.Name)', color: '#385091', isValid: true }">
                    <div class="mb-3">
                        <label asp-for="CourseUpdate.Name" class="form-label"></label>
                        <input x-model="name" asp-for="CourseUpdate.Name" value="@Model.Course.Name" class="form-control form-control-sm" />
                        <span asp-validation-for="CourseUpdate.Name" class="text-danger form-text"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="CourseUpdate.Description" class="form-label"></label>
                        <input asp-for="CourseUpdate.Description" value="@Model.Course.Description" class="form-control form-control-sm" />
                        <span asp-validation-for="CourseUpdate.Description" class="text-danger form-text"></span>
                    </div>
                    <div class="mb-2">
                        <label asp-for="CourseUpdate.HexColor" class="form-label">Color</label>
                        <div class="input-group input-group-sm">
                            <button x-on:click="color = '#' + Math.floor(Math.random() * 16777215).toString(16).padStart(6, '0'); isValid = true" type="button" class="btn btn-secondary mb-3"><i class="bi bi-arrow-counterclockwise"></i></button>
                            <input x-model="color" x-on:input="isValid = isValidHexColor(color)" type="text" id="user-color" class="form-control mb-3" placeholder="Enter a color (e.g., #ff5733)" asp-for="CourseUpdate.HexColor" value="@Model.Course.HexColor">
                        </div>
                        <div x-show="!isValid" class="text-danger">Invalid color format. Please enter a valid hex color.</div>
                        <span asp-validation-for="CourseUpdate.HexColor" class="text-danger form-text"></span>
                    </div>
                    <div class="mb-3" x-show="name.trim() !== ''">
                        <span>Preview:</span>
                        <span class="badge" :style="'background-color: ' + color" x-text="name"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" id="submitButton" class="btn btn-primary">Save</button>
                </div>
            </form>

        </div>
    </div>
</div>

<div class="modal fade" id="study-task-create-modal" tabindex="-1" aria-labelledby="taskModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header mb-3">
                <h5 class="modal-title" id="taskModalLabel">Create a Task</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="mb-1 px-3">
                <small>Add important tasks you want to complete during this session.</small>
            </div>
            <hr class="text-secondary mb-0" />
            <div>
                <div>
                    <form method="post" 
                        asp-page-handler="CreateStudyTask"
                        x-data="{
                          selectedLabels: [],
                          toggleLabel(id) {
                          if (this.selectedLabels.includes(id)) {
                            this.selectedLabels=this.selectedLabels.filter(labelId => labelId !== id);
                          } else {
                            this.selectedLabels.push(id);
                          }
                        },
                        clearSelectedLabels() {
                          this.selectedLabels = [];
                        },
                          hideMoreOptions: true
                        }"
                        x-on:submit="hideMoreOptions = true"
                        x-on:clear-labels.window="clearSelectedLabels()">
                        <div class="modal-body">
                            <input hidden class="form-control form-control-sm" asp-for="StudyTaskCreate.CourseId" value="@Model.Course.Id" />
                            <div class="mb-2">
                                <label asp-for="StudyTaskCreate.Name" class="form-label">Task:</label>
                                <input class="form-control form-control-sm" asp-for="StudyTaskCreate.Name" />
                                <span asp-validation-for="StudyTaskCreate.Name" class="text-danger form-text"></span>
                            </div>
                            <a x-show="hideMoreOptions" x-on:click="hideMoreOptions = false" class="text-muted" data-bs-toggle="collapse" href="#extra-options" role="button" aria-expanded="false" aria-controls="extra-options">
                                <i class="bi bi-plus"></i> More options
                            </a>
                            <div class="collapse" :class="hideMoreOptions ? 'hide' : 'show'" id="extra-options">
                                <div class="mb-2">
                                    <label asp-for="StudyTaskCreate.TaskPriorityId" class="form-label">Priority:</label>
                                    @foreach (var priority in Model.TaskPriorities)
                                    {
                                        <div class="form-check">
                                            <input class="form-check-input" type="radio" asp-for="StudyTaskCreate.TaskPriorityId" value="@priority.Id" id="@(priority.Id)-create" />
                                            <label class="form-check-label" for="@(priority.Id)-create">@priority.Level</label>
                                        </div>
                                    }
                                    <span asp-validation-for="StudyTaskCreate.TaskPriorityId" class="text-danger form-text"></span>
                                </div>
                                <div class="mb-2">
                                    <label asp-for="StudyTaskCreate.Deadline" class="form-label">Deadline:</label>
                                    <input class="form-control form-control-sm" asp-for="StudyTaskCreate.Deadline" />
                                    <span asp-validation-for="StudyTaskCreate.Deadline" class="text-danger form-text"></span>
                                </div>
                                <div class="mb-2">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="d-flex align-items-center">
                                            <label asp-for="StudyTaskCreate.Name" class="form-label me-2 my-0">Labels:</label>
                                            <div class="dropdown">
                                                <a class="text-muted" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                                    Choose <i class="bi bi-chevron-expand"></i>
                                                </a>
                                                <ul class="dropdown-menu">
                                                    <li class="dropdown-item">
                                                        @*Create new label*@
                                                        <a asp-page="/Labels/Index" class="text-opacity-75">
                                                            Create New <i class="bi bi-plus"></i>
                                                        </a>
                                                    </li>
                                                    @foreach (var label in Model.TaskLabels)
                                                    {
                                                        <li>
                                                            <a class="dropdown-item" href="#"
                                                               x-on:click.prevent.stop="toggleLabel(@label.Id)">
                                                                <div class="d-flex justify-content-between align-items-center">
                                                                    <badge text="@label.Name" color="@label.HexColor"></badge>
                                                                    <i class="bi"
                                                                       :class="selectedLabels.includes(@label.Id) ? 'bi-check' :''">
                                                                    </i>
                                                                </div>
                                                            </a>
                                                        </li>
                                                    }
                                                </ul>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="mt-2">
                                        <template x-for="labelId in selectedLabels" :key="labelId">
                                            <div>
                                                @foreach (var label in Model.TaskLabels)
                                                {
                                                    <template x-if="labelId === @label.Id">
                                                        <badge text="@label.Name" color="@label.HexColor"></badge>
                                                    </template>
                                                }
                                                @*For model binding.*@
                                                <input type="hidden" name="StudyTaskCreate.TaskLabelIds" :value="labelId">
                                            </div>
                                        </template>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" id="submitButton" class="btn btn-primary">Add</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@foreach (var task in Model.Course.StudyTasks)
{
    @await Html.PartialAsync("/Pages/Shared/Snippets/StudyTaskSnippets/_EditStudyTaskModal.cshtml", new EditStudyTaskVM 
    {
        StudyTask = task,
        StudyTaskUpdate = new StudyTaskUpdate(),
        TaskLabels = Model.TaskLabels,
        TaskPriorities = Model.TaskPriorities
    })
}


<div class="mb-3">
    <div class="d-flex align-items-center">
        <h2>
            @Model.Course.Name
        </h2>
        <a class="btn btn-link" data-bs-toggle="modal" data-bs-target="#course-edit-modal">
            <i class="bi bi-pencil text-muted"></i>
        </a>
    </div>

    <p class="text-muted mb-0">@Model.Course.Description</p>
</div>
<div class="mb-3">
    <div class="row">
        <div class="col-12 col-md-6 mb-3">
            <div class="d-flex justify-content-between align-items-end mb-3">
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#study-task-create-modal"><i class="bi bi-plus-lg"></i> New Task</button>
            </div>
            @await Html.PartialAsync("Partials/_Tasks")
        </div>
        <div class="col-12 col-md-6">
            <h6>Progress</h6>
            <div id="main" class="h-100" style="min-height: 200px;"></div>
        </div>

    </div>
    
</div>




@section Scripts {

    <script src="https://cdn.jsdelivr.net/npm/echarts@5.5.1/dist/echarts.min.js"></script>
    <partial name="_ValidationScriptsPartial" />


    <script asp-asp-append-version="true" src="~/Pages/Manage/Courses/Index.cshtml.js"></script>

    <script>


        @{
            JsonSerializerOptions options = new()
                {
                    ReferenceHandler = ReferenceHandler.IgnoreCycles,
                    WriteIndented = false
                };
        }
        course = @Html.Raw(@JsonSerializer.Serialize(Model.Course, options));

        console.log(course);
    </script>
}