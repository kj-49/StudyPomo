@model Pomodoro.UI.Pages.Manage.Courses.IndexModel
@using Humanizer
@using Pomodoro.Library.Models.Tables.StudyTaskEntities
@using Pomodoro.UI.Pages.Shared.Snippets.StudyTaskSnippets

@{
    var completedTasks = Model.Course.StudyTasks.Where(u => u.Completed && !u.Archived).ToList();
    var uncompletedTasks = Model.Course.StudyTasks.Where(u => !u.Completed && !u.Archived).ToList();
}


<div class="row" id="htmx-content">
    <div class="col-12 col-md mb-3">
        <div id="dynamic" class="row">
            <div class="col-12 mb-3">
                <h5 class="mb-3">Tasks</h5>
                <form hx-post
                      hx-page="Index">
                    <ul class="list-group">
                        @foreach (var task in uncompletedTasks)
                        {
                            <li class="list-group-item">
                                <div class="d-flex justify-content-between align-items-center mb-0">
                                    <div class="d-flex align-items-baseline">
                                        <div>
                                            <input hx-post
                                                   hx-page-handler="CompleteTask"
                                                   hx-route-studyTaskId="@task.Id"
                                                   hx-route-courseId="@Model.Course.Id"
                                                   hx-swap="outerHTML"
                                                   hx-target="#htmx-content"
                                                   type="checkbox"
                                                   class="form-check-input me-2 mt-1"
                                                   />
                                        </div>
                                        <div class="d-flex flex-column justify-content-between">
                                            <div class="d-flex align-items-center mw-50">
                                                <study-task-link task="@task" bold="true"></study-task-link>
                                                @if (task.TaskPriority != null)
                                                {
                                                    <badge priority="true" text="@task.TaskPriority.Level" color="@task.TaskPriority.DisplayHexColor"></badge>
                                                }
                                                @foreach (var label in task.TaskLabels)
                                                {
                                                    <badge text="@label.Name" color="@label.HexColor"></badge>
                                                }
                                            </div>
                                            <small>Due @task.Deadline.Humanize()</small>
                                        </div>
                                    </div>
                                    <div class="d-flex align-items-center">
                                        <a class="btn btn-link text-primary p-0" data-bs-toggle="modal" data-bs-target="@($"#{StudyTaskModalHelper.GetEditModalId(task.Id)}")">
                                            <i class="bi bi-three-dots"></i>
                                        </a>
                                    </div>
                                </div>

                            </li>
                        }
                        <li class="list-group-item custom-hover">
                            <a data-bs-toggle="modal" data-bs-target="#study-task-create-modal" class="d-flex justify-content-between align-items-center mb-0">
                                <div class="d-flex align-items-baseline">
                                    <div>
                                        <i class="bi bi-plus me-2"></i>
                                    </div>
                                    <div class="d-flex flex-column justify-content-between">
                                        <div class="d-flex align-items-center">
                                            <span class="fw-semibold ext-decoration-none">Add New Task</span>
                                        </div>
                                        <small>Status...</small>
                                    </div>
                                </div>
                            </a>
                        </li>
                    </ul>
                </form>
            </div>
            @if (completedTasks.Count > 0)
            {
                <div class="col-12">
                    <h5 class="mb-3">Completed Tasks</h5>
                    <ul class="list-group">
                        @foreach (var task in completedTasks)
                        {
                            <li class="list-group-item">
                                <div class="d-flex justify-content-between align-items-center mb-0">
                                    <div class="d-flex align-items-baseline">
                                        <div>
                                            <input checked
                                            hx-post
                                            hx-page-handler="UncompleteTask"
                                            hx-route-studyTaskId="@task.Id"
                                            hx-route-courseId="@Model.Course.Id"
                                            hx-swap="outerHTML"
                                            hx-target="#htmx-content"
                                            type="checkbox"
                                            class="form-check-input me-2 mt-1" />
                                        </div>
                                        <div class="d-flex flex-column justify-content-between">
                                            <div class="d-flex align-items-center">
                                                <study-task-link task="@task" bold="true"></study-task-link>
                                                @if (task.TaskPriority != null)
                                                {
                                                    <badge priority="true" text="@task.TaskPriority.Level" color="@task.TaskPriority.DisplayHexColor"></badge>
                                                }
                                                @foreach (var label in task.TaskLabels)
                                                {
                                                    <badge text="@label.Name" color="@label.HexColor"></badge>
                                                }
                                            </div>
                                            <small>@task.Status()</small>
                                        </div>
                                    </div>
                                    <div class="d-flex align-items-center">
                                        <a class="btn btn-link text-primary p-0" data-bs-toggle="modal" data-bs-target="@($"#{StudyTaskModalHelper.GetEditModalId(task.Id)}")">
                                            <i class="bi bi-three-dots"></i>
                                        </a>
                                    </div>
                                </div>

                            </li>
                        }
                    </ul>
                </div>
            }
        </div>
    </div>
    @if (completedTasks.Count > 0)
    {
        <div class="col">
            <h5 class="mb-3">Activity</h5>
            @await Html.PartialAsync("Partials/_Progress")
        </div>
    }
</div>

