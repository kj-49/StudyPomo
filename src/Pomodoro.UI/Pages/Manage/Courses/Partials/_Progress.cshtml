@model Pomodoro.UI.Pages.Manage.Courses.IndexModel

@{
    var courseCreationDate = Model.Course.DateCreated.Date;
    var today = DateTime.Today;

    // Generate a list of dates from course creation to today
    var allDates = Enumerable.Range(0, (today - courseCreationDate).Days + 1)
                             .Select(offset => courseCreationDate.AddDays(offset))
                             .ToList();

    // Completed tasks grouped by completion date
    var completedTasks = Model.Course.StudyTasks
        .Where(t => t.DateCompleted.HasValue)
        .GroupBy(t => t.DateCompleted!.Value.Date)
        .ToDictionary(g => g.Key, g => g.Count());

    // Merge the full date range with the completed tasks count
    var data = allDates.Select(date => new
    {
        Date = date.ToString("yyyy-MM-dd"),
        Count = completedTasks.ContainsKey(date) ? completedTasks[date] : 0
    }).ToList();
}

<div id="main" class="h-100" style="min-height: 200px;"></div>

<script>

    document.addEventListener('DOMContentLoaded', function () {

        drawProgressChart();

    });

    document.addEventListener('htmx:afterRequest', function () {
        drawProgressChart();
    });

    function drawProgressChart() {

        let myChart = echarts.init(document.getElementById('main'));

        let option = {
            xAxis: {
                type: 'category',
                data: @Json.Serialize(data.Select(u => u.Date)),
                axisLabel: {
                    formatter: function (value) {
                        return value;
                    }
                }
            },
            yAxis: {
                type: 'value',
                minInterval: 1,  // Ensure Y-axis increments by 1
                axisLabel: {
                    formatter: function (value) {
                        return Math.floor(value);  // Show whole numbers only
                    }
                }
            },
            series: [
                {
                    data: @Json.Serialize(data.Select(u => u.Count)),
                    type: 'line',
                    smooth: true
                }
            ],
            grid: {
                left: '0%',
                right: '0%',
                top: '5%',
                bottom: '5%',
                containLabel: true
            }
        };

        myChart.setOption(option);
    }
</script>