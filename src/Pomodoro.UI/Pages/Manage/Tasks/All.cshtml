@page
@using AutoMapper
@using Humanizer
@using Pomodoro.Library.Models.Tables.StudyTaskEntities
@using Pomodoro.UI.Pages.Shared.Snippets.StudyTaskSnippets
@using Pomodoro.UI.ViewModels
@model Pomodoro.UI.Pages.Manage.Tasks.AllModel
@inject IMapper mapper
@{
}

<div class="modal fade" id="study-task-create-modal" tabindex="-1" aria-labelledby="taskModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header mb-3">
                <h5 class="modal-title" id="taskModalLabel">Create a Task</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="mb-1 px-3">
                <small>Add important tasks you want to complete during this session.</small>
            </div>
            <hr class="text-secondary mb-0" />
            <div>
                <div>
                    <form method="post"
                          asp-page-handler="CreateStudyTask"
                          x-data="{
                          selectedLabels: [],
                          toggleLabel(id) {
                          if (this.selectedLabels.includes(id)) {
                          this.selectedLabels=this.selectedLabels.filter(labelId =>
                        labelId !== id);
                        } else {
                        this.selectedLabels.push(id);
                        }
                        },
                        clearSelectedLabels() {
                        this.selectedLabels = [];
                        },
                        hideMoreOptions: true
                        }"
                        x-on:submit="hideMoreOptions = true"
                        x-on:clear-labels.window="clearSelectedLabels()">
                        <div class="modal-body">
                            <div class="mb-2">
                                <label asp-for="StudyTaskCreate.Name" class="form-label">Task:</label>
                                <input class="form-control form-control-sm" asp-for="StudyTaskCreate.Name" />
                                <span asp-validation-for="StudyTaskCreate.Name" class="text-danger form-text"></span>
                            </div>
                            <a x-show="hideMoreOptions" x-on:click="hideMoreOptions = false" class="text-muted" data-bs-toggle="collapse" href="#extra-options" role="button" aria-expanded="false" aria-controls="extra-options">
                                <i class="bi bi-plus"></i> More options
                            </a>
                            <div class="collapse" :class="hideMoreOptions ? 'hide' : 'show'" id="extra-options">
                                <div class="mb-2">
                                    <label asp-for="StudyTaskCreate.TaskPriorityId" class="form-label">Priority:</label>
                                    <select class="form-control form-control-sm" asp-for="StudyTaskCreate.TaskPriorityId" asp-items="@Model.TaskPriorities">
                                        <option value="">None</option>
                                    </select>
                                    <span asp-validation-for="StudyTaskCreate.TaskPriorityId" class="text-danger form-text"></span>
                                </div>
                                <div class="mb-2">
                                    <label asp-for="StudyTaskCreate.Deadline" class="form-label">Deadline:</label>
                                    <input class="form-control form-control-sm" asp-for="StudyTaskCreate.Deadline" />
                                    <span asp-validation-for="StudyTaskCreate.Deadline" class="text-danger form-text"></span>
                                </div>
                                <div class="mb-2">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="d-flex align-items-center">
                                            <label asp-for="StudyTaskCreate.Name" class="form-label me-2 my-0">Labels:</label>
                                            <div class="dropdown">
                                                <a class="text-muted" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                                    Choose <i class="bi bi-chevron-expand"></i>
                                                </a>
                                                <ul class="dropdown-menu">
                                                    <li class="dropdown-item">
                                                        @*Create new label*@
                                                        <a asp-page="/Labels/Index" class="text-opacity-75">
                                                            Create New <i class="bi bi-plus"></i>
                                                        </a>
                                                    </li>
                                                    @foreach (var label in Model.TaskLabels)
                                                    {
                                                        <li>
                                                            <a class="dropdown-item" href="#"
                                                               x-on:click.prevent.stop="toggleLabel(@label.Id)">
                                                                <div class="d-flex justify-content-between align-items-center">
                                                                    <badge text="@label.Name" color="@label.HexColor"></badge>
                                                                    <i class="bi"
                                                                       :class="selectedLabels.includes(@label.Id) ? 'bi-check' :''">
                                                                    </i>
                                                                </div>
                                                            </a>
                                                        </li>
                                                    }
                                                </ul>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="mt-2">
                                        <template x-for="labelId in selectedLabels" :key="labelId">
                                            <div>
                                                @foreach (var label in Model.TaskLabels)
                                                {
                                                    <template x-if="labelId === @label.Id">
                                                        <badge text="@label.Name" color="@label.HexColor"></badge>
                                                    </template>
                                                }
                                                @*For model binding.*@
                                                <input type="hidden" name="StudyTaskCreate.TaskLabelIds" :value="labelId">
                                            </div>
                                        </template>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" id="submitButton" class="btn btn-primary">Add</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="mb-2">
    <div class="d-flex justify-content-between align-items-end mb-3">
        <h5 class="mb-0">All Tasks</h5>
    </div>
    <ul class="list-group">
        <li class="list-group-item bg-body-tertiary">
            <div class="row align-items-center">
                <div class="d-flex align-items-center justify-content-between">
                    <div class="col-md-5">
                        <span><strong>Task</strong></span>
                    </div>
                    <div class="d-none d-md-block col-md-4">
                        <span><strong>Due</strong></span>
                    </div>
                    <div class="d-none d-lg-block col-md-1">
                        <span><strong>Course</strong></span>
                    </div>
                    <div class="col-md-2 text-end text-nowrap">
                        <span><strong>Actions</strong></span>
                    </div>
                </div>
            </div>
        </li>
        @foreach (var task in Model.StudyTasks)
        {
            <li class="list-group-item">
                <div class="row align-items-center">
                    <div class="d-flex align-items-center justify-content-between">
                        <div class="col-md-5">
                            @if (task.Completed)
                            {
                                <i class="bi bi-check-circle text-success me-2"></i>
                            } else
                            {
                                <i class="bi bi-x-circle text-secondary me-2"></i>
                            }
                            <study-task-link task="@task"></study-task-link>
                            @if (task.TaskPriority != null)
                            {
                                <badge priority="true" text="@task.TaskPriority.Level" color="@task.TaskPriority.DisplayHexColor"></badge>
                            }
                            @foreach (var label in task.TaskLabels)
                            {
                                <badge text="@label.Name" color="@label.HexColor"></badge>
                            }
                        </div>
                        <div class="d-none d-md-block col-md-4">
                            <span class="text-muted">@task.Deadline.Humanize()</span>
                        </div>
                        <div class="d-none d-lg-block col-md-1">
                            @if (task.Course != null)
                            {
                                <badge text="@task.Course.Name" color="@task.Course.HexColor"></badge>
                            }
                        </div>
                        <div class="col-md-2">
                            <div class="d-flex align-items-center justify-content-end">
                                <div class="dropdown">
                                    <i style="cursor: pointer" class="text-secondary bi bi-three-dots" data-bs-toggle="dropdown" aria-expanded="false"></i>
                                    <ul class="dropdown-menu">
                                        <li><a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="@($"#{StudyTaskModalHelper.GetEditModalId(task.Id)}")">Edit</a></li>
                                        <li>
                                            <form method="post">
                                                <button type="submit" class="dropdown-item" asp-page-handler="ArchiveStudyTask" asp-route-studyTaskId="@task.Id">Delete</button>
                                            </form>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </li>
        }
        @if (Model.StudyTasks.Count == 0)
        {
            <li class="list-group-item custom-hover">
                <a data-bs-toggle="modal" data-bs-target="#study-task-create-modal" class="row align-items-center">
                    <div class="d-flex align-items-center justify-content-between">
                        <div class="col-md-5">
                            <i class="bi bi-plus"></i>
                            <span class="ext-decoration-none text-opacity-50">Add New Task</span>
                        </div>
                        <div class="d-none d-md-block col-md-4">
                            <span class="text-opacity-50">Due...</span>
                        </div>
                        <div class="d-none d-lg-block col-md-1">
                            <span class="text-opacity-50">Course...</span>
                        </div>
                        <div class="col-md-2 text-end text-nowrap">
                        </div>
                    </div>
                </a>
            </li>
        }

    </ul>
    @foreach (var task in Model.StudyTasks)
    {
        @await Html.PartialAsync("/Pages/Shared/Snippets/StudyTaskSnippets/_EditStudyTaskModal.cshtml", new EditStudyTaskVM(
                Model.TimeZone,
                mapper.Map<StudyTaskUpdate>(task),
                Model.TaskLabels,
                Model.TaskPriorities
                ))
    }
</div>