@using PomodoroLibrary.Models.Utility

@model PomodoroUI.Areas.Registered.Pages.Timer.IndexModel

@await Html.PartialAsync("Partials/_TasksOutOfBounds")

<form id="study-task-create-form" 
    hx-post
    hx-page="Index"
    hx-page-handler="CreateStudyTask"
    hx-swap="innerHTML"
    hx-target="#current-tasks"
    hx-on::after-request=" if(event.detail.successful) this.reset()">
    <div class="modal-body">
        <div class="mb-2">
            <label asp-for="StudyTaskCreate.Name" class="form-label">Task:</label>
            <input class="form-control form-control-sm" asp-for="StudyTaskCreate.Name" />
            <span asp-validation-for="StudyTaskCreate.Name" class="text-danger form-text"></span>
        </div>

        <div class="mb-2">
            <label asp-for="StudyTaskCreate.TaskPriorityId" class="form-label">Priority:</label>
            @foreach (var priority in Model.TaskPriorities)
            {
                <div class="form-check">
                    <input class="form-check-input" type="radio" asp-for="StudyTaskCreate.TaskPriorityId" value="@priority.Id" id="(@priority.Id)-create" />
                    <label class="form-check-label" for="(@priority.Id)-create">@priority.Level</label>
                </div>
            }
            <span asp-validation-for="StudyTaskCreate.TaskPriorityId" class="text-danger form-text"></span>
        </div>
        <div class="mb-2" x-data="{
                selectedLabels: [] ,
                toggleLabel(id) {
                    if (this.selectedLabels.includes(id)) {
                        this.selectedLabels=this.selectedLabels.filter(labelId => labelId !== id);
                    } else {
                        this.selectedLabels.push(id);
                    }
                }
            }">
            <div class="d-flex align-items-center">
                <label asp-for="StudyTaskCreate.Name" class="form-label me-2 my-0">Labels:</label>
                <div class="dropdown">
                    <a class="text-secondary text-opacity-75" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Add <i class="bi bi-plus"></i>
                    </a>
                    <ul class="dropdown-menu">
                        @foreach (var label in Model.TaskLabels)
                        {
                            <li>
                                <a class="dropdown-item" href="#"
                                   x-on:click.prevent.stop="toggleLabel(@label.Id)">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <span class="badge" style="background-color: @(label.HexColor)">@label.Name</span>
                                        <i class="bi"
                                           :class="selectedLabels.includes(@label.Id) ? 'bi-check' :''" >
                                        </i>
                                    </div>
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
            <div class="mt-2">
                <template x-for="labelId in selectedLabels" :key="labelId">
                    <div>
                        @foreach (var label in Model.TaskLabels)
                        {
                            <template x-if="labelId === @label.Id">
                                <span class="badge me-1" style="background-color: @label.HexColor">@label.Name</span>
                            </template>
                        }
                        @*For model binding.*@
                        <input type="hidden" name="StudyTaskCreate.StudyLabelIds" :value="labelId">
                    </div>
                </template>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button x-on:click.prevent.stop="submitCreateStudyTaskForm()" type="submit" id="submitButton" class="btn btn-primary">Add</button>
    </div>
    @Html.AntiForgeryToken()
</form>

@section Scripts {

    <partial name="_ValidationScriptsPartial" />
}