@using PomodoroLibrary.Models.Utility
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@model PomodoroUI.Pages.Timer.IndexModel

<form id="study-task-edit-form" 
    hx-post
    hx-page="Index"
    hx-page-handler="UpdateStudyTask"
    hx-swap="outerHTML"
    hx-target="#all-study-tasks"
    hx-on::after-request=" if(event.detail.successful) this.reset()"
    x-data="{
        selectedLabels: @Json.Serialize(Model.StudyTaskUpdate.TaskLabelIds),
        toggleLabel(id) {
            if (this.selectedLabels.includes(id)) {
                this.selectedLabels=this.selectedLabels.filter(labelId => labelId !== id);
            } else {
                this.selectedLabels.push(id);
            }
        },
        clearSelectedLabels() {
            this.selectedLabels = [];
        }
    }">
    <div class="modal-body">
        <input hidden asp-for="StudyTaskUpdate.Id" />
        <div class="mb-2">
            <label asp-for="StudyTaskUpdate.Name" class="form-label">Task:</label>
            <input class="form-control form-control-sm" asp-for="StudyTaskUpdate.Name" />
            <span asp-validation-for="StudyTaskUpdate.Name" class="text-danger form-text"></span>
        </div>
        <div class="mb-2">
            <label asp-for="StudyTaskUpdate.TaskPriorityId" class="form-label">Priority:</label>
            <div class="form-check">
                <input checked class="form-check-input" type="radio" asp-for="StudyTaskUpdate.TaskPriorityId" value="" id="none-edit" />
                <label class="form-check-label text-opacity-75" for="none-edit">None</label>
            </div>
            @foreach (var priority in Model.TaskPriorities)
            {
                <div class="form-check">
                    <input class="form-check-input" type="radio" asp-for="StudyTaskUpdate.TaskPriorityId" value="@priority.Id" id="@(priority.Id)-edit" />
                    <label class="form-check-label" for="@(priority.Id)-edit">@priority.Level</label>
                </div>
            }
            <span asp-validation-for="StudyTaskUpdate.TaskPriorityId" class="text-danger form-text"></span>
        </div>
        <div class="mb-2">
            <div class="d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center">
                    <label asp-for="StudyTaskUpdate.Name" class="form-label me-2 my-0">Labels:</label>
                    <div class="dropdown">
                        <a class="text-secondary" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Choose <i class="bi bi-chevron-expand"></i>
                        </a>
                        <ul class="dropdown-menu">
                            @foreach (var label in Model.TaskLabels)
                            {
                                <li>
                                    <a class="dropdown-item" href="#"
                                       x-on:click.prevent.stop="toggleLabel(@label.Id)">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <span class="badge" style="background-color: @(label.HexColor)">@label.Name</span>
                                            <i class="bi"
                                               :class="selectedLabels.includes(@label.Id) ? 'bi-check' :''">
                                            </i>
                                        </div>
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
                <div>
                    @*Create new label*@
                    <a asp-page="../Labels/Index" class="text-opacity-75">
                        Create New <i class="bi bi-plus"></i>
                    </a>
                </div>
            </div>

            <div class="mt-2">
                <template x-for="labelId in selectedLabels" :key="labelId">
                    <div>
                        @foreach (var label in Model.TaskLabels)
                        {
                            <template x-if="labelId === @label.Id">
                                <span class="badge me-1" style="background-color: @label.HexColor">@label.Name</span>
                            </template>
                        }
                        @*For model binding.*@
                        <input type="hidden" name="StudyTaskUpdate.TaskLabelIds" :value="labelId">
                    </div>
                </template>
            </div>
        </div>
    </div>
    <div class="modal-footer d-flex justify-content-between">
        <div>
            <button class="btn btn-danger" hx-post hx-page-handler="ArchiveStudyTask" hx-route-id="@Model.StudyTaskUpdate.Id" data-bs-dismiss="modal">Archive</button>
        </div>
        <div>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            <button type="submit" id="submitButton" class="btn btn-primary">Save</button>
        </div>
    </div>
    @Html.AntiForgeryToken()
</form>

@section Scripts {

    <partial name="_ValidationScriptsPartial" />
}